{"version":3,"sources":["Pet.js","Results.js","useDropdown.js","SearchParams.js"],"names":["Pet","name","animal","breed","media","location","id","hero","length","small","Results","pets","map","pet","type","breeds","primary","photos","contact","address","city","state","useDropdown","label","defaultState","options","setState","replace","toLowerCase","e","target","value","item","SearchParams","setLocation","setBreeds","AnimalDropdown","ANIMALS","BreedDropdown","setBreed","setPets","theme","setTheme","ThemeContext","then","breedStrings","console","error","preventDefault","requestPets","animals","backgroundColor"],"mappings":"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","file":"SearchParams.75025bf6.js","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default function Pet({ name, animal, breed, media, location, id }) {\r\n  let hero = \"http://placecorgi.com/300/300\";\r\n  if (media.length) {\r\n    hero = media[0].small;\r\n  }\r\n\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\n\r\nconst Results = ({ pets }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      {pets.length === 0 ? (\r\n        <h1>No Pets Found</h1>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            animal={pet.type}\r\n            key={pet.id}\r\n            name={pet.name}\r\n            breed={pet.breeds.primary}\r\n            media={pet.photos}\r\n            location={`${pet.contact.address.city}, ${pet.contact.address.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n  const [state, setState] = useState(defaultState);\r\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\r\n  const Dropdown = () => (\r\n    <label htmlFor=\"{id}\">\r\n      {label}\r\n      <select\r\n        id={id}\r\n        value={state}\r\n        onChange={(e) => setState(e.target.value)}\r\n        onBlur={(e) => setState(e.target.value)}\r\n        disabled={options.length === 0}\r\n      >\r\n        <option>All</option>\r\n        {options.map((item) => (\r\n          <option key={item} value={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n  return [state, Dropdown, setState];\r\n};\r\nexport default useDropdown;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\r\nimport Results from \"./Results\";\r\nimport useDropdown from \"./useDropdown\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nconst SearchParams = () => {\r\n  // const location = \"Seattle, WA\";\r\n  const [location, setLocation] = useState(\"Seattle, WA\");\r\n  const [breeds, setBreeds] = useState([]);\r\n  const [animal, AnimalDropdown] = useDropdown(\"animal\", \"dog\", ANIMALS);\r\n  const [breed, BreedDropdown, setBreed] = useDropdown(\"Breed\", \"\", breeds);\r\n  const [pets, setPets] = useState([]);\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  async function requestPets() {\r\n    const { animals } = await pet.animals({\r\n      location,\r\n      breed,\r\n      type: animal,\r\n    });\r\n\r\n    setPets(animals || []);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBreeds([]);\r\n    setBreed(\"\");\r\n\r\n    pet.breeds(animal).then(({ breeds }) => {\r\n      const breedStrings = breeds.map(({ name }) => name);\r\n      setBreeds(breedStrings);\r\n      // eslint-disable-next-line no-console\r\n    }, console.error);\r\n  }, [animal, setBreed, setBreeds]);\r\n\r\n  return (\r\n    <div className=\"search-params\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\">\r\n          Location\r\n          <input\r\n            type=\"text\"\r\n            id=\"location\"\r\n            value={location}\r\n            placeholder=\"Location\"\r\n            onChange={(e) => setLocation(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <AnimalDropdown />\r\n        <BreedDropdown />\r\n        <label htmlFor=\"theme\">\r\n          Theme\r\n          <select\r\n            id=\"theme\"\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark blue</option>\r\n            <option value=\"mediumorchid\">Medium orchid</option>\r\n            <option value=\"green\">Green</option>\r\n          </select>\r\n        </label>\r\n        <button style={{ backgroundColor: theme }}>Submit</button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchParams;\r\n"]}